для остановки работы JS -  нажать "F8"
например, когда элементы пропадают.

element not interactable -  ошибка может возникать при:


JS::::::::::::::JS:::::::::
document.readyState -  возращает статус загрузки страницы
JS::::::::::::::JS:::::::::


//ul[@class="submenu-container clearfix first-in-line-xs"]//a[text()='Tops']/..//li/a
Оси xPath
Оси это основа запросов XPath и их обязательная часть.

ancestor:: — возвращает множество предков.
ancestor-or-self:: — возвращает множество предков и текущий элемент.
attribute:: — возвращает множество атрибутов текущего элемента.
child:: — возвращает множество потомков на один уровень ниже.
descendant:: — возвращает полное множество потомков.
descendant-or-self:: — возвращает полное множество потомков и текущий элемент.
following:: — возвращает необработанное множество, ниже текущего элемента.
following-sibling:: — возвращает множество элементов на том же уровне, следующих за текущим.
namespace:: — возвращает множество имеющее пространство имён (то есть присутствует атрибут xmlns).
parent:: — возвращает предка на один уровень назад.
preceding:: — возвращает множество обработанных элементов исключая множество предков.
preceding-sibling:: — возвращает множество элементов на том же уровне, предшествующих текущему.
self:: — возвращает текущий элемент.
Для наиболее часто используемых осей существуют сокращения:
attribute:: — можно заменить на «@»
child:: — часто просто опускают
descendant:: — можно заменить на «.//»
parent:: — можно заменить на «..»
self:: — можно заменить на «.»

Work3
если используем implicitlyWait(10,TimeUnit.SECONDS)
то при каждом вызове элемента - вызывается implicitlyWait.
работает на время, -"До момента, когда будет найден элемент"

Fluent wait
более гибкий в настройках
можно проигнорировать Exeptions



ajax
document.readyState="completed" JS проверка загрузки страницы.
если страница не перегружается полностью, то используем явные ожидания
